    1  sudo apt update
    2  sudo apt install terminator
    3  sudo apt-get install terminator
    4  lsb_release -a
    5  sudo add-apt-repository universe multiverse
    6  sudo apt install terminator
    7  sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
    8  sudo mkdir -p /etc/apt/keyrings
    9  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
   10    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   11  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
   12  sudo apt install apt-transport-https ca-certificates curl software-properties-common
   13  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   14  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
   15  apt-cache policy docker-ce
   16  sudo apt install docker-ce
   17  sudo systemctl status docker
   18  sudo usermod -aG docker $imamd
   19  sudo usermod -aG docker ${imamd}
   20  sudo usermod -aG docker imamd
   21  su - imamd
   22  cd Downloads/
   23  sudo dpkg -i google-chrome-stable_current_amd64.deb 
   24  cd
   25  sudo apt-get install gnome-tweaks
   26  groups
   27  docker ps
   28  docker image
   29  sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
   30  sudo chmod +x /usr/local/bin/docker-compose
   31  docker-compose --version
   32  sudo apt install gnome-tweaks 
   33  apt --fix-broken install
   34  sudo rm /var/lib/dpkg/lock-frontend
   35  sudo rm /var/lib/dpkg/lock
   36  apt --fix-broken install
   37  sudo rm /var/lib/dpkg/lock-frontend
   38  sudo apt --fix-broken install
   39  cd Downloads/
   40  chmod +x Inkscape-dc2aeda-x86_64.AppImage 
   41  ./Inkscape-dc2aeda-x86_64.AppImage 
   42  sudo chmod +x Inkscape-dc2aeda-x86_64.AppImage 
   43  ./Inkscape-dc2aeda-x86_64.AppImage 
   44  sudo apt-get install fuse libfuse2
   45  sudo modprobe -v fuse
   46  ./Inkscape-dc2aeda-x86_64.AppImage 
   47  sudo addgroup fuse
   48  sudo adduser imamd fuse
   49  ./Inkscape-dc2aeda-x86_64.AppImage 
   50  sudo apt install libgc
   51  sudo snap install inkscape 
   52  docker create volume create-db
   53  docker volume create todo-db
   54  docker volume ls
   55  docker ps
   56  docker run -dp 3000:3000 --name todo-app todo-app:v1
   57  docker rm todo-app
   58  docker stop todo-app 
   59  docker rm todo-app
   60  docker run -dp 3000:3000 --name todo-app -v todo-db:/etc/todos todo-app:v1
   61  docker rm -f todo-app 
   62  docker network create todo-app
   63  docker run -d      --name mysql-db \
   64  docker run -d --name mysql-db --network todo-app --network-alias mysql -v todo-mysql-data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=dicoding -e MYSQL_DATABASE=todo-db mysql:5.7
   65  docker exec -it mysql-db mysql -u root -p
   66  docker ps
   67  [200~docker run -dp 3000:3000 --name todo-app   -w /app -v "$(pwd):/app"   --network todo-app   -e MYSQL_HOST=mysql   -e MYSQL_USER=root   -e MYSQL_PASSWORD=dicoding   -e MYSQL_DB=todo-db   node:12-alpine   sh -c "yarn install && yarn run dev"~
   68  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   69  docker logs todo-app
   70  docker logs todo-app 
   71  docker ps
   72  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   73  docker ps -a
   74  docker rm todo-app 
   75  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   76  docker logs todo-app 
   77  docker rm todo-app 
   78  docker run -p 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   79  docker network ls
   80  docker ps
   81  docker run -dp 3000:3000 --name todo-app -w /app "$(pwd):"
   82  docker run -dp 3000:3000 --name todo-app -w /app "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   83  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   84  docker rm -f todo-app 
   85  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   86  docker logs todo-app 
   87  docker ps
   88  docker exec -it mysql-db mysql -u root -p
   89  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   90  docker rm -f todo-app 
   91  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
   92  docker logs todo-app 
   93  clear
   94  docker rm -f todo-app 
   95  docker run -dp 3000:3000 --name todo-app -v todo-db:/etc/todos todo-app:v1
   96  clear
   97  docker rm -f todo-app 
   98  docker run -dp 3000:3000 --name todo-app -v todo-db:/etc/todos todo-app:v1
   99  pwd
  100  docker ps
  101  docker rm -f todo-app 
  102  docker run -dp 3000:3000 --name todo-app -v todo-db:/etc/todos todo-app:v1
  103  docker ps
  104  docker logs todo-app 
  105  docker rm -f todo-app 
  106  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
  107  docker logs todo-app
  108  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
  109  docker rm -f todo-app 
  110  close
  111  clear
  112  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
  113  docker logs todo-app 
  114  docker exec -it mysql-db mysql -u root -p
  115  docker ps
  116  docker rm -f todo-app 
  117  docker volume ls
  118  docker network ls
  119  docker volume rm todo-mysql-data 
  120  docker logs mysql-db
  121  history
  122  docker iamges
  123  docker images
  124  docker logs mysql-db
  125  docker ps
  126  docker network ls
  127  docker volume ls
  128  docker run -dp 3000:3000 --name todo-app -w /app -v "$(pwd):/app" --network todo-app -e MYSQL_HOST=mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=dicoding -e MYSQL_DB=todo-db node:12-alpine sh -c "yarn install && yarn run dev"
  129  docker logs todo-app 
  130  history
  131  clear
  132  docker-compose up -d
  133  sudo docker-compose up -d
  134  docke rps
  135  docker ps
  136  docker ps -a
  137  docker logs a433-microservices_app_1 
  138  docker-compose down
  139  sudo docker-compose down
  140  sudo docker-compose up -d
  141  docker logs a433-microservices_app_1 
  142  sudo docker-compose down
  143  sudo docker-compose up -d
  144  docker logs a433-microservices_app_1 
  145  sudo docker-compose down
  146  sudo vim ~/.bashrc 
  147  source ~/.bashrc
  148  docker-compose up -d
  149  docker logs a433-microservices_app_1 
  150  docker ps
  151  docker compose down
  152  docker-compose down
  153  docker compose down
  154  docker ps
  155  docker-compose up -d
  156  docker logs a433-microservices_app_1 
  157  docker-compose down
  158  docker-compose up -d
  159  docker ps
  160  docker-compose up -d
  161  docker logs a433-microservices_app_1 
  162  docker-compose down
  163  docker-compose up -d
  164  docker logs a433-microservices_app_1 
  165  docker exec -it mysql-db mysql -u root -p
  166  docker exec -it a433-microservices_mysql_1  mysql -u root -p
  167  docker-compose down
  168  docker exec -it a433-microservices_mysql_1  mysql -u root -p
  169  docker-compose up -d
  170  docker exec -it a433-microservices_mysql_1  mysql -u root -p
  171  docker volumes ls
  172  docker volume ls
  173  docker inspect a433-microservices_
  174  docker inspect a433-microservices_todo-mysql-data 
  175  docker volume ls
  176  docker inspect a433-microservices_todo-mysql-data 
  177  docker-compose down
  178  docker-compose up -d
  179  docker exec -it a433-microservices_mysql_1  mysql -u root -p
  180  docker logs a433-microservices_app_1 
  181  docker-compose down
  182  docker-compose up -d
  183  docker exec -it a433-microservices_mysql_1  mysql -u root -p
  184  docker logs a433-microservices_app_1 
  185  docker-compose down
  186  docker-compose up -d
  187  docker exec -it a433-microservices_app_1  mysql -u root -p
  188  docker exec -it a433-microservices_app_1 
  189  docker exec -it a433-microservices_app_1 bash
  190  docker exec -it a433-microservices_app_1 a433-microservices_app_1
  191  docker exec -it a433-microservices_app_1 /bin/bash
  192  docker logs a433-microservices_app_1 
  193  docker-compose down
  194  docker-compose up -d
  195  docker logs a433-microservices_app_1 
  196  docker-compose dwonm
  197  docker-compose down
  198  docker-compose up -d
  199  docker logs a433-microservices_app_1 
  200  docker-compose down
  201  docker-compose up -d
  202  docker logs a433-microservices_app_1 
  203  docker-compose down
  204  docker-compose up -d
  205  docker logs a433-microservices_app_1 
  206  docker-compose down
  207  docker-compose up -d
  208  docker logs a433-microservices_app_1 
  209  docker-compose down
  210  history
  211  docker-compose down
  212  docker ps
  213  docker-compose up -d
  214  docker logs a433-microservices_app_1 
  215  docker-compose down
  216  docker-compose up -d
  217  docker logs a433-microservices_app_1 
  218  docker-compose up -d
  219  docker logs a433-microservices_app_1 
  220  docker-compose up -d
  221  docker logs a433-microservices_app_1 
  222  docker-compose up -d
  223  docker logs a433-microservices_app_1 
  224  docker-compose up -d
  225  docker logs a433-microservices_app_1 
  226  docker-compose up -d
  227  docker logs a433-microservices_app_1 
  228  docker-compose down
  229  docker-compose up -d
  230  docker logs a433-microservices_app_1 
  231  docker-compose up -d
  232  docker logs a433-microservices_app_1 
  233  docker compose down
  234  docker-compose down
  235  docker-compose up -d
  236  docker logs a433-microservices_app_1 
  237  docker-compose down
  238  docker-compose up -d
  239  docker logs a433-microservices_app_1 
  240  docker exec -it a433-microservices_mysql_1  mysql -u root -p
  241  docker build -t submission-app:v1 .
  242  docker ps
  243  docker images
  244  docker run -dp 8080:8080 --name app submission-app:v1
  245  docker ps
  246  docker logs app
  247  docker stop app
  248  clear
  249  docker-compose up -d
  250  docker logs a433-microservices_item-app_1 
  251  docker-compose up -d
  252  docker logs a433-microservices_item-app_1 
  253  docker-compose down
  254  docker-compose up -d~
  255  docker-compose up -d
  256  docker logs a433-microservices_item-app_1 
  257  docker logs a433-microservices_item-db_1 
  258  docker-compose up -d
  259  docker logs a433-microservices_item-app_1 
  260  docker-compose up -d
  261  docker logs a433-microservices_item-app_1 
  262  docker-compose down
  263  docker images
  264  docker run -dp 27017:27017 --name mongodb mongo:3
  265  docker logs mongodb 
  266  docker run -dp 3000:3000 --name app 
  267  docker images
  268  docker run -dp 3000:3000 --name app item-app:v1
  269  docker ps
  270  docker ps -a
  271  docker rm 7f4
  272  docker run -dp 3000:3000 --name app item-app:v1
  273  docker logs app
  274  docker restart app
  275  docker logs app
  276  docker rm -f app
  277  docker run -dp 8080:8080 --name app item-app:v1
  278  docker logs app
  279  docker restart app
  280  docker logs app
  281  docker rm -f app
  282  npm install
  283  clear
  284  npm install
  285  nvm use v14.7.0
  286  source ~/.bashrc
  287  nvm use v14.7.0
  288  npm install
  289  node ./bin/www
  290  docker ps
  291  docker run -dp 8080:3000 --name app item-app:v1
  292  docker logs app
  293  docker ps
  294  docker rm -f app
  295  docker run -dp 8080:8080 --name app item-app:v1
  296  docker logs app 
  297  npm start
  298  docker
  299  clear
  300  npm start
  301  clear
  302  docker ps
  303  docker ps -a
  304  docker inspect item-app:v1
  305  docker ps -a
  306  docker rm app
  307  docker run -dp 3000:8080 --name app item-app:v1
  308  docker ps 
  309  docker ps
  310  docker logs app
  311  docker rm -f app
  312  docker run -dp 3000:80 --name app item-app:v1
  313  docker logs app
  314  docker rm -f app
  315  docker run -dp 3000:3000 --name app item-app:v1
  316  docker ps
  317  docker rm -f app
  318  docker ps
  319  docker stop mongobd
  320  docker stop mongodb
  321  docker images
  322  docker-compose up 
  323  docker-compose down
  324  docker-compose up 
  325  docker-compose down
  326  docker-compose up -d
  327  docker logs a433-microservices_item-app_1 
  328  docker-compose up -d
  329  docker logs a433-microservices_item-app_1 
  330  docker logs a433-microservices_item-app_1  > log-app.txt
  331  docker logs a433-microservices_item-db_1 
  332  docker logs a433-microservices_item-db_1 > log-db.txt
  333  history > logs.ttx
